package com.smartcampus.android.ui;

import com.smartcampus.android.ui.maps.online.WebMap2DOnline;

import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;

public class Globals {
	
	//public static boolean IsFirstFix = true;
	
	public static final String URL_EXTRA = "url";
	
	//public static final String SMARTCAMPUS_SERVICE_ROOT_URI = "http://smartcampus.cloudapp.net/RadioMapService.svc/";
	
	public static AlertDialog createConnectionErrorDialog(Context context)
	{
		return createErrorDialog(context, "Connection Error", "Please check that you have connectivity and try again.");
	}
	
	public static AlertDialog createErrorDialog(Context context, String errorTitle, String errorMsg)
	{
		AlertDialog.Builder errorBuilder = new AlertDialog.Builder(context);
		errorBuilder.setTitle(errorTitle);
		errorBuilder.setMessage(errorMsg)
		   .setPositiveButton("Ok", new DialogInterface.OnClickListener() {
		       public void onClick(DialogInterface dialog, int id) {
		           dialog.dismiss();
		       }
		   }
		);
		return errorBuilder.create();
	}
	
	public static AlertDialog createWifiDialog(final Context context)
	{
		final AlertDialog.Builder builder = new AlertDialog.Builder(context);
			builder.setTitle("Turn on Wifi?");
			builder.setMessage("Wi-Fi is required. Do you want to turn Wi-Fi on?");
			builder.setPositiveButton("Yes",
	            new DialogInterface.OnClickListener() {
	                @Override
	                public void onClick(final DialogInterface dialogInterface, final int i) {	                	
	                	context.startActivity(new Intent(android.provider.Settings.ACTION_WIFI_SETTINGS));	                	
	                }
	            });
			builder.setNegativeButton("No", null);
			
			return builder.create();
	}
	
	public static AlertDialog createGpsDialog(final Context context)
	{
		final AlertDialog.Builder builder = new AlertDialog.Builder(context);
			builder.setTitle("Turn on Gps?");
			builder.setMessage("Gps is required. Do you want to turn Gps on?");
			//builder.setCancelable(false); //We allow cancellation by 'back'
			builder.setPositiveButton("Yes", new DialogInterface.OnClickListener() {
                @Override
                public void onClick(
                        final DialogInterface dialogInterface,
                        final int i) {
                	try {
                		context.startActivity(new Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS));
                	}
                	catch (Exception ex)
                	{
                		Globals.createErrorDialog(context, "Error: No Gps Provider found", "No Gps Provider was found.");
                	}
                }
            });
			builder.setNegativeButton("No", null);
			/*
			builder.setNegativeButton("No", new DialogInterface.OnClickListener() {
                public void onClick(final DialogInterface dialog, final int id) {
                    dialog.cancel();
                }
            });
            */
			return builder.create();
	}
	
	//Used squarely for remote debugging. 
    public static AlertDialog createExceptionDialog(Context context, Exception ex)
    {
    	String msg = ex.getMessage(); 
		if (msg == null)
			msg = "<missing msg.>";
		
		String cause = null;
		Throwable c = ex.getCause();
		if (c != null)
			cause = ex.getCause().getMessage();
		if (cause == null)
			cause = "<missing cause>";
		
		String localizedMsg = ex.getLocalizedMessage();
		if (localizedMsg == null)
			localizedMsg = "<missing localized msg.>";
		
		StringBuffer stackTrace = new StringBuffer();    				
		StackTraceElement[] stacks = ex.getStackTrace();
		if (stacks != null)
		{
			for (StackTraceElement st : stacks)
				stackTrace.append(st.toString()).append("; \n");
		}
		
		StringBuffer sb = new StringBuffer();
		sb.append("MSG:\n").append(msg).append("\n");
		sb.append("CAUSE:\n").append(cause).append("\n");
		sb.append("LOCAL-MSG:\n").append(localizedMsg).append("\n");
		sb.append("STACK:\n").append(stackTrace.toString()).append("\n");    				
		final String finalError = sb.toString();
		
		AlertDialog alertDialog = new AlertDialog.Builder(context).create();
	    alertDialog.setTitle("Error");
	    alertDialog.setMessage(finalError);
	    alertDialog.setButton("OK", new DialogInterface.OnClickListener() {
	        public void onClick(DialogInterface dialog, int which) {
	        	return;
	        }
	    });
	    return alertDialog;
    }
}
