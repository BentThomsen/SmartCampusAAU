//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("radiomapModel", "FK_VertexAbsoluteLocation", "Vertex", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RadioMapLocal.Vertex), "AbsoluteLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RadioMapLocal.AbsoluteLocation), true)]
[assembly: EdmRelationshipAttribute("radiomapModel", "FK_BuildingFloor1", "Building", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RadioMapLocal.Building), "Building_Floors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RadioMapLocal.Building_Floors), true)]
[assembly: EdmRelationshipAttribute("radiomapModel", "FK_BuildingBuilding_GpsBounds", "Building", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RadioMapLocal.Building), "Building_GpsBounds", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RadioMapLocal.Building_GpsBounds), true)]
[assembly: EdmRelationshipAttribute("radiomapModel", "FK_BuildingMacInfo11", "Building", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RadioMapLocal.Building), "Building_MacInfos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RadioMapLocal.Building_MacInfos), true)]
[assembly: EdmRelationshipAttribute("radiomapModel", "FK_BuildingGraphicalMap11", "Building", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RadioMapLocal.Building), "Building_Maps", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RadioMapLocal.Building_Maps), true)]
[assembly: EdmRelationshipAttribute("radiomapModel", "FK_BuildingEdge", "Building", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RadioMapLocal.Building), "Edge", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RadioMapLocal.Edge), true)]
[assembly: EdmRelationshipAttribute("radiomapModel", "FK_BuildingVertex", "Building", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RadioMapLocal.Building), "Vertex", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RadioMapLocal.Vertex), true)]
[assembly: EdmRelationshipAttribute("radiomapModel", "FK_WifiMeasurementHistogram", "WifiMeasurement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RadioMapLocal.WifiMeasurement), "Histogram", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RadioMapLocal.Histogram), true)]
[assembly: EdmRelationshipAttribute("radiomapModel", "FK_VertexPixelLocation", "Vertex", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RadioMapLocal.Vertex), "PixelLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RadioMapLocal.PixelLocation), true)]
[assembly: EdmRelationshipAttribute("radiomapModel", "FK_VertexRelativeLocation", "Vertex", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RadioMapLocal.Vertex), "RelativeLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RadioMapLocal.RelativeLocation), true)]
[assembly: EdmRelationshipAttribute("radiomapModel", "FK_VertexSymbolicLocation", "Vertex", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RadioMapLocal.Vertex), "SymbolicLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RadioMapLocal.SymbolicLocation), true)]
[assembly: EdmRelationshipAttribute("radiomapModel", "FK_VertexWifiMeasurement", "Vertex", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RadioMapLocal.Vertex), "WifiMeasurement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RadioMapLocal.WifiMeasurement), true)]
[assembly: EdmRelationshipAttribute("radiomapModel", "FK_SnifferHistograms_SnifferWifiMeasurements", "SnifferWifiMeasurement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RadioMapLocal.SnifferWifiMeasurement), "SnifferHistogram", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RadioMapLocal.SnifferHistogram), true)]
[assembly: EdmRelationshipAttribute("radiomapModel", "FK_SnifferWifiMeasurements_Vertices", "Vertex", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RadioMapLocal.Vertex), "SnifferWifiMeasurement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RadioMapLocal.SnifferWifiMeasurement), true)]
[assembly: EdmRelationshipAttribute("radiomapModel", "Vertex_Edges", "Edge", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RadioMapLocal.Edge), "Vertex", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RadioMapLocal.Vertex))]

#endregion

namespace RadioMapLocal
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class radiomapEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new radiomapEntities object using the connection string found in the 'radiomapEntities' section of the application configuration file.
        /// </summary>
        public radiomapEntities() : base("name=radiomapEntities", "radiomapEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new radiomapEntities object.
        /// </summary>
        public radiomapEntities(string connectionString) : base(connectionString, "radiomapEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new radiomapEntities object.
        /// </summary>
        public radiomapEntities(EntityConnection connection) : base(connection, "radiomapEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AbsoluteLocation> AbsoluteLocations
        {
            get
            {
                if ((_AbsoluteLocations == null))
                {
                    _AbsoluteLocations = base.CreateObjectSet<AbsoluteLocation>("AbsoluteLocations");
                }
                return _AbsoluteLocations;
            }
        }
        private ObjectSet<AbsoluteLocation> _AbsoluteLocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Building_Floors> Building_Floors
        {
            get
            {
                if ((_Building_Floors == null))
                {
                    _Building_Floors = base.CreateObjectSet<Building_Floors>("Building_Floors");
                }
                return _Building_Floors;
            }
        }
        private ObjectSet<Building_Floors> _Building_Floors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Building_GpsBounds> Building_GpsBounds
        {
            get
            {
                if ((_Building_GpsBounds == null))
                {
                    _Building_GpsBounds = base.CreateObjectSet<Building_GpsBounds>("Building_GpsBounds");
                }
                return _Building_GpsBounds;
            }
        }
        private ObjectSet<Building_GpsBounds> _Building_GpsBounds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Building_MacInfos> Building_MacInfos
        {
            get
            {
                if ((_Building_MacInfos == null))
                {
                    _Building_MacInfos = base.CreateObjectSet<Building_MacInfos>("Building_MacInfos");
                }
                return _Building_MacInfos;
            }
        }
        private ObjectSet<Building_MacInfos> _Building_MacInfos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Building_Maps> Building_Maps
        {
            get
            {
                if ((_Building_Maps == null))
                {
                    _Building_Maps = base.CreateObjectSet<Building_Maps>("Building_Maps");
                }
                return _Building_Maps;
            }
        }
        private ObjectSet<Building_Maps> _Building_Maps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Building> Buildings
        {
            get
            {
                if ((_Buildings == null))
                {
                    _Buildings = base.CreateObjectSet<Building>("Buildings");
                }
                return _Buildings;
            }
        }
        private ObjectSet<Building> _Buildings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Edge> Edges
        {
            get
            {
                if ((_Edges == null))
                {
                    _Edges = base.CreateObjectSet<Edge>("Edges");
                }
                return _Edges;
            }
        }
        private ObjectSet<Edge> _Edges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Histogram> Histograms
        {
            get
            {
                if ((_Histograms == null))
                {
                    _Histograms = base.CreateObjectSet<Histogram>("Histograms");
                }
                return _Histograms;
            }
        }
        private ObjectSet<Histogram> _Histograms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PixelLocation> PixelLocations
        {
            get
            {
                if ((_PixelLocations == null))
                {
                    _PixelLocations = base.CreateObjectSet<PixelLocation>("PixelLocations");
                }
                return _PixelLocations;
            }
        }
        private ObjectSet<PixelLocation> _PixelLocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RelativeLocation> RelativeLocations
        {
            get
            {
                if ((_RelativeLocations == null))
                {
                    _RelativeLocations = base.CreateObjectSet<RelativeLocation>("RelativeLocations");
                }
                return _RelativeLocations;
            }
        }
        private ObjectSet<RelativeLocation> _RelativeLocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SymbolicLocation> SymbolicLocations
        {
            get
            {
                if ((_SymbolicLocations == null))
                {
                    _SymbolicLocations = base.CreateObjectSet<SymbolicLocation>("SymbolicLocations");
                }
                return _SymbolicLocations;
            }
        }
        private ObjectSet<SymbolicLocation> _SymbolicLocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vertex> Vertices
        {
            get
            {
                if ((_Vertices == null))
                {
                    _Vertices = base.CreateObjectSet<Vertex>("Vertices");
                }
                return _Vertices;
            }
        }
        private ObjectSet<Vertex> _Vertices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WifiMeasurement> WifiMeasurements
        {
            get
            {
                if ((_WifiMeasurements == null))
                {
                    _WifiMeasurements = base.CreateObjectSet<WifiMeasurement>("WifiMeasurements");
                }
                return _WifiMeasurements;
            }
        }
        private ObjectSet<WifiMeasurement> _WifiMeasurements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SnifferHistogram> SnifferHistograms
        {
            get
            {
                if ((_SnifferHistograms == null))
                {
                    _SnifferHistograms = base.CreateObjectSet<SnifferHistogram>("SnifferHistograms");
                }
                return _SnifferHistograms;
            }
        }
        private ObjectSet<SnifferHistogram> _SnifferHistograms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SnifferWifiMeasurement> SnifferWifiMeasurements
        {
            get
            {
                if ((_SnifferWifiMeasurements == null))
                {
                    _SnifferWifiMeasurements = base.CreateObjectSet<SnifferWifiMeasurement>("SnifferWifiMeasurements");
                }
                return _SnifferWifiMeasurements;
            }
        }
        private ObjectSet<SnifferWifiMeasurement> _SnifferWifiMeasurements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrackedPosition> TrackedPositions
        {
            get
            {
                if ((_TrackedPositions == null))
                {
                    _TrackedPositions = base.CreateObjectSet<TrackedPosition>("TrackedPositions");
                }
                return _TrackedPositions;
            }
        }
        private ObjectSet<TrackedPosition> _TrackedPositions;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AbsoluteLocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAbsoluteLocations(AbsoluteLocation absoluteLocation)
        {
            base.AddObject("AbsoluteLocations", absoluteLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Building_Floors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuilding_Floors(Building_Floors building_Floors)
        {
            base.AddObject("Building_Floors", building_Floors);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Building_GpsBounds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuilding_GpsBounds(Building_GpsBounds building_GpsBounds)
        {
            base.AddObject("Building_GpsBounds", building_GpsBounds);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Building_MacInfos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuilding_MacInfos(Building_MacInfos building_MacInfos)
        {
            base.AddObject("Building_MacInfos", building_MacInfos);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Building_Maps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuilding_Maps(Building_Maps building_Maps)
        {
            base.AddObject("Building_Maps", building_Maps);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Buildings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuildings(Building building)
        {
            base.AddObject("Buildings", building);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Edges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEdges(Edge edge)
        {
            base.AddObject("Edges", edge);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Histograms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHistograms(Histogram histogram)
        {
            base.AddObject("Histograms", histogram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PixelLocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPixelLocations(PixelLocation pixelLocation)
        {
            base.AddObject("PixelLocations", pixelLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RelativeLocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRelativeLocations(RelativeLocation relativeLocation)
        {
            base.AddObject("RelativeLocations", relativeLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SymbolicLocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSymbolicLocations(SymbolicLocation symbolicLocation)
        {
            base.AddObject("SymbolicLocations", symbolicLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vertices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVertices(Vertex vertex)
        {
            base.AddObject("Vertices", vertex);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WifiMeasurements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWifiMeasurements(WifiMeasurement wifiMeasurement)
        {
            base.AddObject("WifiMeasurements", wifiMeasurement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SnifferHistograms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSnifferHistograms(SnifferHistogram snifferHistogram)
        {
            base.AddObject("SnifferHistograms", snifferHistogram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SnifferWifiMeasurements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSnifferWifiMeasurements(SnifferWifiMeasurement snifferWifiMeasurement)
        {
            base.AddObject("SnifferWifiMeasurements", snifferWifiMeasurement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrackedPositions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrackedPositions(TrackedPosition trackedPosition)
        {
            base.AddObject("TrackedPositions", trackedPosition);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="radiomapModel", Name="AbsoluteLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AbsoluteLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AbsoluteLocation object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="vertex_ID">Initial value of the Vertex_ID property.</param>
        public static AbsoluteLocation CreateAbsoluteLocation(global::System.Int32 id, global::System.Int32 vertex_ID)
        {
            AbsoluteLocation absoluteLocation = new AbsoluteLocation();
            absoluteLocation.ID = id;
            absoluteLocation.Vertex_ID = vertex_ID;
            return absoluteLocation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> latitude
        {
            get
            {
                return _latitude;
            }
            set
            {
                OnlatitudeChanging(value);
                ReportPropertyChanging("latitude");
                _latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("latitude");
                OnlatitudeChanged();
            }
        }
        private Nullable<global::System.Decimal> _latitude;
        partial void OnlatitudeChanging(Nullable<global::System.Decimal> value);
        partial void OnlatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> longitude
        {
            get
            {
                return _longitude;
            }
            set
            {
                OnlongitudeChanging(value);
                ReportPropertyChanging("longitude");
                _longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("longitude");
                OnlongitudeChanged();
            }
        }
        private Nullable<global::System.Decimal> _longitude;
        partial void OnlongitudeChanging(Nullable<global::System.Decimal> value);
        partial void OnlongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> altitude
        {
            get
            {
                return _altitude;
            }
            set
            {
                OnaltitudeChanging(value);
                ReportPropertyChanging("altitude");
                _altitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("altitude");
                OnaltitudeChanged();
            }
        }
        private Nullable<global::System.Decimal> _altitude;
        partial void OnaltitudeChanging(Nullable<global::System.Decimal> value);
        partial void OnaltitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Vertex_ID
        {
            get
            {
                return _Vertex_ID;
            }
            set
            {
                OnVertex_IDChanging(value);
                ReportPropertyChanging("Vertex_ID");
                _Vertex_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Vertex_ID");
                OnVertex_IDChanged();
            }
        }
        private global::System.Int32 _Vertex_ID;
        partial void OnVertex_IDChanging(global::System.Int32 value);
        partial void OnVertex_IDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_VertexAbsoluteLocation", "Vertex")]
        public Vertex Vertex
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vertex>("radiomapModel.FK_VertexAbsoluteLocation", "Vertex").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vertex>("radiomapModel.FK_VertexAbsoluteLocation", "Vertex").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vertex> VertexReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vertex>("radiomapModel.FK_VertexAbsoluteLocation", "Vertex");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vertex>("radiomapModel.FK_VertexAbsoluteLocation", "Vertex", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="radiomapModel", Name="Building")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Building : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Building object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Building CreateBuilding(global::System.Int32 id)
        {
            Building building = new Building();
            building.ID = id;
            return building;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Building_Name
        {
            get
            {
                return _Building_Name;
            }
            set
            {
                OnBuilding_NameChanging(value);
                ReportPropertyChanging("Building_Name");
                _Building_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Building_Name");
                OnBuilding_NameChanged();
            }
        }
        private global::System.String _Building_Name;
        partial void OnBuilding_NameChanging(global::System.String value);
        partial void OnBuilding_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ifc_Url
        {
            get
            {
                return _Ifc_Url;
            }
            set
            {
                OnIfc_UrlChanging(value);
                ReportPropertyChanging("Ifc_Url");
                _Ifc_Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ifc_Url");
                OnIfc_UrlChanged();
            }
        }
        private global::System.String _Ifc_Url;
        partial void OnIfc_UrlChanging(global::System.String value);
        partial void OnIfc_UrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Lat
        {
            get
            {
                return _Lat;
            }
            set
            {
                OnLatChanging(value);
                ReportPropertyChanging("Lat");
                _Lat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lat");
                OnLatChanged();
            }
        }
        private Nullable<global::System.Decimal> _Lat;
        partial void OnLatChanging(Nullable<global::System.Decimal> value);
        partial void OnLatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Lon
        {
            get
            {
                return _Lon;
            }
            set
            {
                OnLonChanging(value);
                ReportPropertyChanging("Lon");
                _Lon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lon");
                OnLonChanged();
            }
        }
        private Nullable<global::System.Decimal> _Lon;
        partial void OnLonChanging(Nullable<global::System.Decimal> value);
        partial void OnLonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Postal_Code
        {
            get
            {
                return _Postal_Code;
            }
            set
            {
                OnPostal_CodeChanging(value);
                ReportPropertyChanging("Postal_Code");
                _Postal_Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Postal_Code");
                OnPostal_CodeChanged();
            }
        }
        private global::System.String _Postal_Code;
        partial void OnPostal_CodeChanging(global::System.String value);
        partial void OnPostal_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Max_Address
        {
            get
            {
                return _Max_Address;
            }
            set
            {
                OnMax_AddressChanging(value);
                ReportPropertyChanging("Max_Address");
                _Max_Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Max_Address");
                OnMax_AddressChanged();
            }
        }
        private global::System.String _Max_Address;
        partial void OnMax_AddressChanging(global::System.String value);
        partial void OnMax_AddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sniffer_Url
        {
            get
            {
                return _Sniffer_Url;
            }
            set
            {
                OnSniffer_UrlChanging(value);
                ReportPropertyChanging("Sniffer_Url");
                _Sniffer_Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sniffer_Url");
                OnSniffer_UrlChanged();
            }
        }
        private global::System.String _Sniffer_Url;
        partial void OnSniffer_UrlChanging(global::System.String value);
        partial void OnSniffer_UrlChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_BuildingFloor1", "Building_Floors")]
        public EntityCollection<Building_Floors> Building_Floors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Building_Floors>("radiomapModel.FK_BuildingFloor1", "Building_Floors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Building_Floors>("radiomapModel.FK_BuildingFloor1", "Building_Floors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_BuildingBuilding_GpsBounds", "Building_GpsBounds")]
        public EntityCollection<Building_GpsBounds> Building_GpsBounds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Building_GpsBounds>("radiomapModel.FK_BuildingBuilding_GpsBounds", "Building_GpsBounds");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Building_GpsBounds>("radiomapModel.FK_BuildingBuilding_GpsBounds", "Building_GpsBounds", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_BuildingMacInfo11", "Building_MacInfos")]
        public EntityCollection<Building_MacInfos> Building_MacInfos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Building_MacInfos>("radiomapModel.FK_BuildingMacInfo11", "Building_MacInfos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Building_MacInfos>("radiomapModel.FK_BuildingMacInfo11", "Building_MacInfos", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_BuildingGraphicalMap11", "Building_Maps")]
        public EntityCollection<Building_Maps> Building_Maps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Building_Maps>("radiomapModel.FK_BuildingGraphicalMap11", "Building_Maps");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Building_Maps>("radiomapModel.FK_BuildingGraphicalMap11", "Building_Maps", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_BuildingEdge", "Edge")]
        public EntityCollection<Edge> Edges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Edge>("radiomapModel.FK_BuildingEdge", "Edge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Edge>("radiomapModel.FK_BuildingEdge", "Edge", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_BuildingVertex", "Vertex")]
        public EntityCollection<Vertex> Vertices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vertex>("radiomapModel.FK_BuildingVertex", "Vertex");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vertex>("radiomapModel.FK_BuildingVertex", "Vertex", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="radiomapModel", Name="Building_Floors")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Building_Floors : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Building_Floors object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="building_ID">Initial value of the Building_ID property.</param>
        public static Building_Floors CreateBuilding_Floors(global::System.Int32 id, global::System.Int32 number, global::System.Int32 building_ID)
        {
            Building_Floors building_Floors = new Building_Floors();
            building_Floors.ID = id;
            building_Floors.Number = number;
            building_Floors.Building_ID = building_ID;
            return building_Floors;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Building_ID
        {
            get
            {
                return _Building_ID;
            }
            set
            {
                OnBuilding_IDChanging(value);
                ReportPropertyChanging("Building_ID");
                _Building_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Building_ID");
                OnBuilding_IDChanged();
            }
        }
        private global::System.Int32 _Building_ID;
        partial void OnBuilding_IDChanging(global::System.Int32 value);
        partial void OnBuilding_IDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_BuildingFloor1", "Building")]
        public Building Building
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("radiomapModel.FK_BuildingFloor1", "Building").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("radiomapModel.FK_BuildingFloor1", "Building").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Building> BuildingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("radiomapModel.FK_BuildingFloor1", "Building");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Building>("radiomapModel.FK_BuildingFloor1", "Building", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="radiomapModel", Name="Building_GpsBounds")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Building_GpsBounds : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Building_GpsBounds object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="building_ID">Initial value of the Building_ID property.</param>
        public static Building_GpsBounds CreateBuilding_GpsBounds(global::System.Int32 id, global::System.Int32 building_ID)
        {
            Building_GpsBounds building_GpsBounds = new Building_GpsBounds();
            building_GpsBounds.ID = id;
            building_GpsBounds.Building_ID = building_ID;
            return building_GpsBounds;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Building_ID
        {
            get
            {
                return _Building_ID;
            }
            set
            {
                OnBuilding_IDChanging(value);
                ReportPropertyChanging("Building_ID");
                _Building_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Building_ID");
                OnBuilding_IDChanged();
            }
        }
        private global::System.Int32 _Building_ID;
        partial void OnBuilding_IDChanging(global::System.Int32 value);
        partial void OnBuilding_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> bottomleft_lat
        {
            get
            {
                return _bottomleft_lat;
            }
            set
            {
                Onbottomleft_latChanging(value);
                ReportPropertyChanging("bottomleft_lat");
                _bottomleft_lat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bottomleft_lat");
                Onbottomleft_latChanged();
            }
        }
        private Nullable<global::System.Decimal> _bottomleft_lat;
        partial void Onbottomleft_latChanging(Nullable<global::System.Decimal> value);
        partial void Onbottomleft_latChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> bottomleft_lon
        {
            get
            {
                return _bottomleft_lon;
            }
            set
            {
                Onbottomleft_lonChanging(value);
                ReportPropertyChanging("bottomleft_lon");
                _bottomleft_lon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bottomleft_lon");
                Onbottomleft_lonChanged();
            }
        }
        private Nullable<global::System.Decimal> _bottomleft_lon;
        partial void Onbottomleft_lonChanging(Nullable<global::System.Decimal> value);
        partial void Onbottomleft_lonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> bottomright_lat
        {
            get
            {
                return _bottomright_lat;
            }
            set
            {
                Onbottomright_latChanging(value);
                ReportPropertyChanging("bottomright_lat");
                _bottomright_lat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bottomright_lat");
                Onbottomright_latChanged();
            }
        }
        private Nullable<global::System.Decimal> _bottomright_lat;
        partial void Onbottomright_latChanging(Nullable<global::System.Decimal> value);
        partial void Onbottomright_latChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> bottomright_lon
        {
            get
            {
                return _bottomright_lon;
            }
            set
            {
                Onbottomright_lonChanging(value);
                ReportPropertyChanging("bottomright_lon");
                _bottomright_lon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bottomright_lon");
                Onbottomright_lonChanged();
            }
        }
        private Nullable<global::System.Decimal> _bottomright_lon;
        partial void Onbottomright_lonChanging(Nullable<global::System.Decimal> value);
        partial void Onbottomright_lonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> topright_lat
        {
            get
            {
                return _topright_lat;
            }
            set
            {
                Ontopright_latChanging(value);
                ReportPropertyChanging("topright_lat");
                _topright_lat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("topright_lat");
                Ontopright_latChanged();
            }
        }
        private Nullable<global::System.Decimal> _topright_lat;
        partial void Ontopright_latChanging(Nullable<global::System.Decimal> value);
        partial void Ontopright_latChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> topright_lon
        {
            get
            {
                return _topright_lon;
            }
            set
            {
                Ontopright_lonChanging(value);
                ReportPropertyChanging("topright_lon");
                _topright_lon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("topright_lon");
                Ontopright_lonChanged();
            }
        }
        private Nullable<global::System.Decimal> _topright_lon;
        partial void Ontopright_lonChanging(Nullable<global::System.Decimal> value);
        partial void Ontopright_lonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> topleft_lat
        {
            get
            {
                return _topleft_lat;
            }
            set
            {
                Ontopleft_latChanging(value);
                ReportPropertyChanging("topleft_lat");
                _topleft_lat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("topleft_lat");
                Ontopleft_latChanged();
            }
        }
        private Nullable<global::System.Decimal> _topleft_lat;
        partial void Ontopleft_latChanging(Nullable<global::System.Decimal> value);
        partial void Ontopleft_latChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> topleft_lon
        {
            get
            {
                return _topleft_lon;
            }
            set
            {
                Ontopleft_lonChanging(value);
                ReportPropertyChanging("topleft_lon");
                _topleft_lon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("topleft_lon");
                Ontopleft_lonChanged();
            }
        }
        private Nullable<global::System.Decimal> _topleft_lon;
        partial void Ontopleft_lonChanging(Nullable<global::System.Decimal> value);
        partial void Ontopleft_lonChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_BuildingBuilding_GpsBounds", "Building")]
        public Building Building
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("radiomapModel.FK_BuildingBuilding_GpsBounds", "Building").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("radiomapModel.FK_BuildingBuilding_GpsBounds", "Building").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Building> BuildingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("radiomapModel.FK_BuildingBuilding_GpsBounds", "Building");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Building>("radiomapModel.FK_BuildingBuilding_GpsBounds", "Building", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="radiomapModel", Name="Building_MacInfos")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Building_MacInfos : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Building_MacInfos object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="building_ID">Initial value of the Building_ID property.</param>
        /// <param name="mac">Initial value of the Mac property.</param>
        public static Building_MacInfos CreateBuilding_MacInfos(global::System.Int32 id, global::System.Int32 building_ID, global::System.String mac)
        {
            Building_MacInfos building_MacInfos = new Building_MacInfos();
            building_MacInfos.ID = id;
            building_MacInfos.Building_ID = building_ID;
            building_MacInfos.Mac = mac;
            return building_MacInfos;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SSID
        {
            get
            {
                return _SSID;
            }
            set
            {
                OnSSIDChanging(value);
                ReportPropertyChanging("SSID");
                _SSID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SSID");
                OnSSIDChanged();
            }
        }
        private global::System.String _SSID;
        partial void OnSSIDChanging(global::System.String value);
        partial void OnSSIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Building_ID
        {
            get
            {
                return _Building_ID;
            }
            set
            {
                OnBuilding_IDChanging(value);
                ReportPropertyChanging("Building_ID");
                _Building_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Building_ID");
                OnBuilding_IDChanged();
            }
        }
        private global::System.Int32 _Building_ID;
        partial void OnBuilding_IDChanging(global::System.Int32 value);
        partial void OnBuilding_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mac
        {
            get
            {
                return _Mac;
            }
            set
            {
                if (_Mac != value)
                {
                    OnMacChanging(value);
                    ReportPropertyChanging("Mac");
                    _Mac = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Mac");
                    OnMacChanged();
                }
            }
        }
        private global::System.String _Mac;
        partial void OnMacChanging(global::System.String value);
        partial void OnMacChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_BuildingMacInfo11", "Building")]
        public Building Building
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("radiomapModel.FK_BuildingMacInfo11", "Building").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("radiomapModel.FK_BuildingMacInfo11", "Building").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Building> BuildingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("radiomapModel.FK_BuildingMacInfo11", "Building");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Building>("radiomapModel.FK_BuildingMacInfo11", "Building", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="radiomapModel", Name="Building_Maps")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Building_Maps : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Building_Maps object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="building_ID">Initial value of the Building_ID property.</param>
        public static Building_Maps CreateBuilding_Maps(global::System.Int32 id, global::System.Int32 building_ID)
        {
            Building_Maps building_Maps = new Building_Maps();
            building_Maps.ID = id;
            building_Maps.Building_ID = building_ID;
            return building_Maps;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String url
        {
            get
            {
                return _url;
            }
            set
            {
                OnurlChanging(value);
                ReportPropertyChanging("url");
                _url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("url");
                OnurlChanged();
            }
        }
        private global::System.String _url;
        partial void OnurlChanging(global::System.String value);
        partial void OnurlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Building_ID
        {
            get
            {
                return _Building_ID;
            }
            set
            {
                OnBuilding_IDChanging(value);
                ReportPropertyChanging("Building_ID");
                _Building_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Building_ID");
                OnBuilding_IDChanged();
            }
        }
        private global::System.Int32 _Building_ID;
        partial void OnBuilding_IDChanging(global::System.Int32 value);
        partial void OnBuilding_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> bottomleft_x
        {
            get
            {
                return _bottomleft_x;
            }
            set
            {
                Onbottomleft_xChanging(value);
                ReportPropertyChanging("bottomleft_x");
                _bottomleft_x = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bottomleft_x");
                Onbottomleft_xChanged();
            }
        }
        private Nullable<global::System.Int32> _bottomleft_x;
        partial void Onbottomleft_xChanging(Nullable<global::System.Int32> value);
        partial void Onbottomleft_xChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> bottomleft_y
        {
            get
            {
                return _bottomleft_y;
            }
            set
            {
                Onbottomleft_yChanging(value);
                ReportPropertyChanging("bottomleft_y");
                _bottomleft_y = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bottomleft_y");
                Onbottomleft_yChanged();
            }
        }
        private Nullable<global::System.Int32> _bottomleft_y;
        partial void Onbottomleft_yChanging(Nullable<global::System.Int32> value);
        partial void Onbottomleft_yChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> bottomright_x
        {
            get
            {
                return _bottomright_x;
            }
            set
            {
                Onbottomright_xChanging(value);
                ReportPropertyChanging("bottomright_x");
                _bottomright_x = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bottomright_x");
                Onbottomright_xChanged();
            }
        }
        private Nullable<global::System.Int32> _bottomright_x;
        partial void Onbottomright_xChanging(Nullable<global::System.Int32> value);
        partial void Onbottomright_xChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> bottomright_y
        {
            get
            {
                return _bottomright_y;
            }
            set
            {
                Onbottomright_yChanging(value);
                ReportPropertyChanging("bottomright_y");
                _bottomright_y = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bottomright_y");
                Onbottomright_yChanged();
            }
        }
        private Nullable<global::System.Int32> _bottomright_y;
        partial void Onbottomright_yChanging(Nullable<global::System.Int32> value);
        partial void Onbottomright_yChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> topleft_x
        {
            get
            {
                return _topleft_x;
            }
            set
            {
                Ontopleft_xChanging(value);
                ReportPropertyChanging("topleft_x");
                _topleft_x = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("topleft_x");
                Ontopleft_xChanged();
            }
        }
        private Nullable<global::System.Int32> _topleft_x;
        partial void Ontopleft_xChanging(Nullable<global::System.Int32> value);
        partial void Ontopleft_xChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> topleft_y
        {
            get
            {
                return _topleft_y;
            }
            set
            {
                Ontopleft_yChanging(value);
                ReportPropertyChanging("topleft_y");
                _topleft_y = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("topleft_y");
                Ontopleft_yChanged();
            }
        }
        private Nullable<global::System.Int32> _topleft_y;
        partial void Ontopleft_yChanging(Nullable<global::System.Int32> value);
        partial void Ontopleft_yChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> topright_x
        {
            get
            {
                return _topright_x;
            }
            set
            {
                Ontopright_xChanging(value);
                ReportPropertyChanging("topright_x");
                _topright_x = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("topright_x");
                Ontopright_xChanged();
            }
        }
        private Nullable<global::System.Int32> _topright_x;
        partial void Ontopright_xChanging(Nullable<global::System.Int32> value);
        partial void Ontopright_xChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> topright_y
        {
            get
            {
                return _topright_y;
            }
            set
            {
                Ontopright_yChanging(value);
                ReportPropertyChanging("topright_y");
                _topright_y = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("topright_y");
                Ontopright_yChanged();
            }
        }
        private Nullable<global::System.Int32> _topright_y;
        partial void Ontopright_yChanging(Nullable<global::System.Int32> value);
        partial void Ontopright_yChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_BuildingGraphicalMap11", "Building")]
        public Building Building
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("radiomapModel.FK_BuildingGraphicalMap11", "Building").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("radiomapModel.FK_BuildingGraphicalMap11", "Building").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Building> BuildingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("radiomapModel.FK_BuildingGraphicalMap11", "Building");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Building>("radiomapModel.FK_BuildingGraphicalMap11", "Building", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="radiomapModel", Name="Edge")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Edge : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Edge object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="directional">Initial value of the directional property.</param>
        /// <param name="vertexOrigin">Initial value of the vertexOrigin property.</param>
        /// <param name="vertexDestination">Initial value of the vertexDestination property.</param>
        /// <param name="building_ID">Initial value of the Building_ID property.</param>
        public static Edge CreateEdge(global::System.Int32 id, global::System.Boolean directional, global::System.Int32 vertexOrigin, global::System.Int32 vertexDestination, global::System.Int32 building_ID)
        {
            Edge edge = new Edge();
            edge.ID = id;
            edge.directional = directional;
            edge.vertexOrigin = vertexOrigin;
            edge.vertexDestination = vertexDestination;
            edge.Building_ID = building_ID;
            return edge;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean directional
        {
            get
            {
                return _directional;
            }
            set
            {
                OndirectionalChanging(value);
                ReportPropertyChanging("directional");
                _directional = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("directional");
                OndirectionalChanged();
            }
        }
        private global::System.Boolean _directional;
        partial void OndirectionalChanging(global::System.Boolean value);
        partial void OndirectionalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 vertexOrigin
        {
            get
            {
                return _vertexOrigin;
            }
            set
            {
                OnvertexOriginChanging(value);
                ReportPropertyChanging("vertexOrigin");
                _vertexOrigin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("vertexOrigin");
                OnvertexOriginChanged();
            }
        }
        private global::System.Int32 _vertexOrigin;
        partial void OnvertexOriginChanging(global::System.Int32 value);
        partial void OnvertexOriginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 vertexDestination
        {
            get
            {
                return _vertexDestination;
            }
            set
            {
                OnvertexDestinationChanging(value);
                ReportPropertyChanging("vertexDestination");
                _vertexDestination = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("vertexDestination");
                OnvertexDestinationChanged();
            }
        }
        private global::System.Int32 _vertexDestination;
        partial void OnvertexDestinationChanging(global::System.Int32 value);
        partial void OnvertexDestinationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Building_ID
        {
            get
            {
                return _Building_ID;
            }
            set
            {
                OnBuilding_IDChanging(value);
                ReportPropertyChanging("Building_ID");
                _Building_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Building_ID");
                OnBuilding_IDChanged();
            }
        }
        private global::System.Int32 _Building_ID;
        partial void OnBuilding_IDChanging(global::System.Int32 value);
        partial void OnBuilding_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> is_stair
        {
            get
            {
                return _is_stair;
            }
            set
            {
                Onis_stairChanging(value);
                ReportPropertyChanging("is_stair");
                _is_stair = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("is_stair");
                Onis_stairChanged();
            }
        }
        private Nullable<global::System.Boolean> _is_stair;
        partial void Onis_stairChanging(Nullable<global::System.Boolean> value);
        partial void Onis_stairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> is_elevator
        {
            get
            {
                return _is_elevator;
            }
            set
            {
                Onis_elevatorChanging(value);
                ReportPropertyChanging("is_elevator");
                _is_elevator = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("is_elevator");
                Onis_elevatorChanged();
            }
        }
        private Nullable<global::System.Boolean> _is_elevator;
        partial void Onis_elevatorChanging(Nullable<global::System.Boolean> value);
        partial void Onis_elevatorChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_BuildingEdge", "Building")]
        public Building Building
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("radiomapModel.FK_BuildingEdge", "Building").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("radiomapModel.FK_BuildingEdge", "Building").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Building> BuildingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("radiomapModel.FK_BuildingEdge", "Building");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Building>("radiomapModel.FK_BuildingEdge", "Building", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "Vertex_Edges", "Vertex")]
        public EntityCollection<Vertex> Vertices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vertex>("radiomapModel.Vertex_Edges", "Vertex");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vertex>("radiomapModel.Vertex_Edges", "Vertex", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="radiomapModel", Name="Histogram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Histogram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Histogram object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="value">Initial value of the value property.</param>
        /// <param name="count">Initial value of the count property.</param>
        /// <param name="wifiMeasurement_ID">Initial value of the WifiMeasurement_ID property.</param>
        /// <param name="mac">Initial value of the Mac property.</param>
        public static Histogram CreateHistogram(global::System.Int32 id, global::System.Int32 value, global::System.Int32 count, global::System.Int32 wifiMeasurement_ID, global::System.String mac)
        {
            Histogram histogram = new Histogram();
            histogram.ID = id;
            histogram.value = value;
            histogram.count = count;
            histogram.WifiMeasurement_ID = wifiMeasurement_ID;
            histogram.Mac = mac;
            return histogram;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.Int32 _value;
        partial void OnvalueChanging(global::System.Int32 value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 count
        {
            get
            {
                return _count;
            }
            set
            {
                OncountChanging(value);
                ReportPropertyChanging("count");
                _count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("count");
                OncountChanged();
            }
        }
        private global::System.Int32 _count;
        partial void OncountChanging(global::System.Int32 value);
        partial void OncountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WifiMeasurement_ID
        {
            get
            {
                return _WifiMeasurement_ID;
            }
            set
            {
                OnWifiMeasurement_IDChanging(value);
                ReportPropertyChanging("WifiMeasurement_ID");
                _WifiMeasurement_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WifiMeasurement_ID");
                OnWifiMeasurement_IDChanged();
            }
        }
        private global::System.Int32 _WifiMeasurement_ID;
        partial void OnWifiMeasurement_IDChanging(global::System.Int32 value);
        partial void OnWifiMeasurement_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mac
        {
            get
            {
                return _Mac;
            }
            set
            {
                OnMacChanging(value);
                ReportPropertyChanging("Mac");
                _Mac = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mac");
                OnMacChanged();
            }
        }
        private global::System.String _Mac;
        partial void OnMacChanging(global::System.String value);
        partial void OnMacChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_WifiMeasurementHistogram", "WifiMeasurement")]
        public WifiMeasurement WifiMeasurement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WifiMeasurement>("radiomapModel.FK_WifiMeasurementHistogram", "WifiMeasurement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WifiMeasurement>("radiomapModel.FK_WifiMeasurementHistogram", "WifiMeasurement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WifiMeasurement> WifiMeasurementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WifiMeasurement>("radiomapModel.FK_WifiMeasurementHistogram", "WifiMeasurement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WifiMeasurement>("radiomapModel.FK_WifiMeasurementHistogram", "WifiMeasurement", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="radiomapModel", Name="PixelLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PixelLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PixelLocation object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="vertex_ID">Initial value of the Vertex_ID property.</param>
        public static PixelLocation CreatePixelLocation(global::System.Int32 id, global::System.Int32 vertex_ID)
        {
            PixelLocation pixelLocation = new PixelLocation();
            pixelLocation.ID = id;
            pixelLocation.Vertex_ID = vertex_ID;
            return pixelLocation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> x
        {
            get
            {
                return _x;
            }
            set
            {
                OnxChanging(value);
                ReportPropertyChanging("x");
                _x = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("x");
                OnxChanged();
            }
        }
        private Nullable<global::System.Int32> _x;
        partial void OnxChanging(Nullable<global::System.Int32> value);
        partial void OnxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> y
        {
            get
            {
                return _y;
            }
            set
            {
                OnyChanging(value);
                ReportPropertyChanging("y");
                _y = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("y");
                OnyChanged();
            }
        }
        private Nullable<global::System.Int32> _y;
        partial void OnyChanging(Nullable<global::System.Int32> value);
        partial void OnyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> z
        {
            get
            {
                return _z;
            }
            set
            {
                OnzChanging(value);
                ReportPropertyChanging("z");
                _z = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("z");
                OnzChanged();
            }
        }
        private Nullable<global::System.Int32> _z;
        partial void OnzChanging(Nullable<global::System.Int32> value);
        partial void OnzChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Vertex_ID
        {
            get
            {
                return _Vertex_ID;
            }
            set
            {
                OnVertex_IDChanging(value);
                ReportPropertyChanging("Vertex_ID");
                _Vertex_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Vertex_ID");
                OnVertex_IDChanged();
            }
        }
        private global::System.Int32 _Vertex_ID;
        partial void OnVertex_IDChanging(global::System.Int32 value);
        partial void OnVertex_IDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_VertexPixelLocation", "Vertex")]
        public Vertex Vertex
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vertex>("radiomapModel.FK_VertexPixelLocation", "Vertex").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vertex>("radiomapModel.FK_VertexPixelLocation", "Vertex").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vertex> VertexReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vertex>("radiomapModel.FK_VertexPixelLocation", "Vertex");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vertex>("radiomapModel.FK_VertexPixelLocation", "Vertex", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="radiomapModel", Name="RelativeLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RelativeLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RelativeLocation object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="vertex_ID">Initial value of the Vertex_ID property.</param>
        public static RelativeLocation CreateRelativeLocation(global::System.Int32 id, global::System.Int32 vertex_ID)
        {
            RelativeLocation relativeLocation = new RelativeLocation();
            relativeLocation.ID = id;
            relativeLocation.Vertex_ID = vertex_ID;
            return relativeLocation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> x
        {
            get
            {
                return _x;
            }
            set
            {
                OnxChanging(value);
                ReportPropertyChanging("x");
                _x = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("x");
                OnxChanged();
            }
        }
        private Nullable<global::System.Int32> _x;
        partial void OnxChanging(Nullable<global::System.Int32> value);
        partial void OnxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> y
        {
            get
            {
                return _y;
            }
            set
            {
                OnyChanging(value);
                ReportPropertyChanging("y");
                _y = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("y");
                OnyChanged();
            }
        }
        private Nullable<global::System.Int32> _y;
        partial void OnyChanging(Nullable<global::System.Int32> value);
        partial void OnyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> z
        {
            get
            {
                return _z;
            }
            set
            {
                OnzChanging(value);
                ReportPropertyChanging("z");
                _z = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("z");
                OnzChanged();
            }
        }
        private Nullable<global::System.Int32> _z;
        partial void OnzChanging(Nullable<global::System.Int32> value);
        partial void OnzChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Vertex_ID
        {
            get
            {
                return _Vertex_ID;
            }
            set
            {
                OnVertex_IDChanging(value);
                ReportPropertyChanging("Vertex_ID");
                _Vertex_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Vertex_ID");
                OnVertex_IDChanged();
            }
        }
        private global::System.Int32 _Vertex_ID;
        partial void OnVertex_IDChanging(global::System.Int32 value);
        partial void OnVertex_IDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_VertexRelativeLocation", "Vertex")]
        public Vertex Vertex
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vertex>("radiomapModel.FK_VertexRelativeLocation", "Vertex").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vertex>("radiomapModel.FK_VertexRelativeLocation", "Vertex").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vertex> VertexReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vertex>("radiomapModel.FK_VertexRelativeLocation", "Vertex");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vertex>("radiomapModel.FK_VertexRelativeLocation", "Vertex", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="radiomapModel", Name="SnifferHistogram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SnifferHistogram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SnifferHistogram object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="mac">Initial value of the Mac property.</param>
        /// <param name="value">Initial value of the value property.</param>
        /// <param name="count">Initial value of the count property.</param>
        /// <param name="wifiMeasurement_ID">Initial value of the WifiMeasurement_ID property.</param>
        public static SnifferHistogram CreateSnifferHistogram(global::System.Int32 id, global::System.String mac, global::System.Int32 value, global::System.Int32 count, global::System.Int32 wifiMeasurement_ID)
        {
            SnifferHistogram snifferHistogram = new SnifferHistogram();
            snifferHistogram.ID = id;
            snifferHistogram.Mac = mac;
            snifferHistogram.value = value;
            snifferHistogram.count = count;
            snifferHistogram.WifiMeasurement_ID = wifiMeasurement_ID;
            return snifferHistogram;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mac
        {
            get
            {
                return _Mac;
            }
            set
            {
                OnMacChanging(value);
                ReportPropertyChanging("Mac");
                _Mac = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mac");
                OnMacChanged();
            }
        }
        private global::System.String _Mac;
        partial void OnMacChanging(global::System.String value);
        partial void OnMacChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.Int32 _value;
        partial void OnvalueChanging(global::System.Int32 value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 count
        {
            get
            {
                return _count;
            }
            set
            {
                OncountChanging(value);
                ReportPropertyChanging("count");
                _count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("count");
                OncountChanged();
            }
        }
        private global::System.Int32 _count;
        partial void OncountChanging(global::System.Int32 value);
        partial void OncountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WifiMeasurement_ID
        {
            get
            {
                return _WifiMeasurement_ID;
            }
            set
            {
                OnWifiMeasurement_IDChanging(value);
                ReportPropertyChanging("WifiMeasurement_ID");
                _WifiMeasurement_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WifiMeasurement_ID");
                OnWifiMeasurement_IDChanged();
            }
        }
        private global::System.Int32 _WifiMeasurement_ID;
        partial void OnWifiMeasurement_IDChanging(global::System.Int32 value);
        partial void OnWifiMeasurement_IDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_SnifferHistograms_SnifferWifiMeasurements", "SnifferWifiMeasurement")]
        public SnifferWifiMeasurement SnifferWifiMeasurement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SnifferWifiMeasurement>("radiomapModel.FK_SnifferHistograms_SnifferWifiMeasurements", "SnifferWifiMeasurement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SnifferWifiMeasurement>("radiomapModel.FK_SnifferHistograms_SnifferWifiMeasurements", "SnifferWifiMeasurement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SnifferWifiMeasurement> SnifferWifiMeasurementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SnifferWifiMeasurement>("radiomapModel.FK_SnifferHistograms_SnifferWifiMeasurements", "SnifferWifiMeasurement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SnifferWifiMeasurement>("radiomapModel.FK_SnifferHistograms_SnifferWifiMeasurements", "SnifferWifiMeasurement", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="radiomapModel", Name="SnifferWifiMeasurement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SnifferWifiMeasurement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SnifferWifiMeasurement object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="vertex_ID">Initial value of the Vertex_ID property.</param>
        public static SnifferWifiMeasurement CreateSnifferWifiMeasurement(global::System.Int32 id, global::System.Int32 vertex_ID)
        {
            SnifferWifiMeasurement snifferWifiMeasurement = new SnifferWifiMeasurement();
            snifferWifiMeasurement.ID = id;
            snifferWifiMeasurement.Vertex_ID = vertex_ID;
            return snifferWifiMeasurement;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> meas_time_start
        {
            get
            {
                return _meas_time_start;
            }
            set
            {
                Onmeas_time_startChanging(value);
                ReportPropertyChanging("meas_time_start");
                _meas_time_start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("meas_time_start");
                Onmeas_time_startChanged();
            }
        }
        private Nullable<global::System.DateTime> _meas_time_start;
        partial void Onmeas_time_startChanging(Nullable<global::System.DateTime> value);
        partial void Onmeas_time_startChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> meas_time_end
        {
            get
            {
                return _meas_time_end;
            }
            set
            {
                Onmeas_time_endChanging(value);
                ReportPropertyChanging("meas_time_end");
                _meas_time_end = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("meas_time_end");
                Onmeas_time_endChanged();
            }
        }
        private Nullable<global::System.DateTime> _meas_time_end;
        partial void Onmeas_time_endChanging(Nullable<global::System.DateTime> value);
        partial void Onmeas_time_endChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Vertex_ID
        {
            get
            {
                return _Vertex_ID;
            }
            set
            {
                OnVertex_IDChanging(value);
                ReportPropertyChanging("Vertex_ID");
                _Vertex_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Vertex_ID");
                OnVertex_IDChanged();
            }
        }
        private global::System.Int32 _Vertex_ID;
        partial void OnVertex_IDChanging(global::System.Int32 value);
        partial void OnVertex_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Is_Collective
        {
            get
            {
                return _Is_Collective;
            }
            set
            {
                OnIs_CollectiveChanging(value);
                ReportPropertyChanging("Is_Collective");
                _Is_Collective = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Is_Collective");
                OnIs_CollectiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Is_Collective;
        partial void OnIs_CollectiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIs_CollectiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Was_Collective
        {
            get
            {
                return _Was_Collective;
            }
            set
            {
                OnWas_CollectiveChanging(value);
                ReportPropertyChanging("Was_Collective");
                _Was_Collective = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Was_Collective");
                OnWas_CollectiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Was_Collective;
        partial void OnWas_CollectiveChanging(Nullable<global::System.Boolean> value);
        partial void OnWas_CollectiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_SnifferHistograms_SnifferWifiMeasurements", "SnifferHistogram")]
        public EntityCollection<SnifferHistogram> SnifferHistograms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SnifferHistogram>("radiomapModel.FK_SnifferHistograms_SnifferWifiMeasurements", "SnifferHistogram");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SnifferHistogram>("radiomapModel.FK_SnifferHistograms_SnifferWifiMeasurements", "SnifferHistogram", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_SnifferWifiMeasurements_Vertices", "Vertex")]
        public Vertex Vertex
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vertex>("radiomapModel.FK_SnifferWifiMeasurements_Vertices", "Vertex").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vertex>("radiomapModel.FK_SnifferWifiMeasurements_Vertices", "Vertex").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vertex> VertexReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vertex>("radiomapModel.FK_SnifferWifiMeasurements_Vertices", "Vertex");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vertex>("radiomapModel.FK_SnifferWifiMeasurements_Vertices", "Vertex", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="radiomapModel", Name="SymbolicLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SymbolicLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SymbolicLocation object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="vertex_ID">Initial value of the Vertex_ID property.</param>
        public static SymbolicLocation CreateSymbolicLocation(global::System.Int32 id, global::System.Int32 vertex_ID)
        {
            SymbolicLocation symbolicLocation = new SymbolicLocation();
            symbolicLocation.ID = id;
            symbolicLocation.Vertex_ID = vertex_ID;
            return symbolicLocation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String url
        {
            get
            {
                return _url;
            }
            set
            {
                OnurlChanging(value);
                ReportPropertyChanging("url");
                _url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("url");
                OnurlChanged();
            }
        }
        private global::System.String _url;
        partial void OnurlChanging(global::System.String value);
        partial void OnurlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Vertex_ID
        {
            get
            {
                return _Vertex_ID;
            }
            set
            {
                OnVertex_IDChanging(value);
                ReportPropertyChanging("Vertex_ID");
                _Vertex_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Vertex_ID");
                OnVertex_IDChanged();
            }
        }
        private global::System.Int32 _Vertex_ID;
        partial void OnVertex_IDChanging(global::System.Int32 value);
        partial void OnVertex_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> is_entrance
        {
            get
            {
                return _is_entrance;
            }
            set
            {
                Onis_entranceChanging(value);
                ReportPropertyChanging("is_entrance");
                _is_entrance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("is_entrance");
                Onis_entranceChanged();
            }
        }
        private Nullable<global::System.Boolean> _is_entrance;
        partial void Onis_entranceChanging(Nullable<global::System.Boolean> value);
        partial void Onis_entranceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> info_type
        {
            get
            {
                return _info_type;
            }
            set
            {
                Oninfo_typeChanging(value);
                ReportPropertyChanging("info_type");
                _info_type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("info_type");
                Oninfo_typeChanged();
            }
        }
        private Nullable<global::System.Int32> _info_type;
        partial void Oninfo_typeChanging(Nullable<global::System.Int32> value);
        partial void Oninfo_typeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_VertexSymbolicLocation", "Vertex")]
        public Vertex Vertex
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vertex>("radiomapModel.FK_VertexSymbolicLocation", "Vertex").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vertex>("radiomapModel.FK_VertexSymbolicLocation", "Vertex").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vertex> VertexReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vertex>("radiomapModel.FK_VertexSymbolicLocation", "Vertex");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vertex>("radiomapModel.FK_VertexSymbolicLocation", "Vertex", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="radiomapModel", Name="TrackedPosition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrackedPosition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrackedPosition object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="latitude">Initial value of the Latitude property.</param>
        /// <param name="longitude">Initial value of the Longitude property.</param>
        /// <param name="altitude">Initial value of the Altitude property.</param>
        public static TrackedPosition CreateTrackedPosition(global::System.Int32 id, global::System.Double latitude, global::System.Double longitude, global::System.Double altitude)
        {
            TrackedPosition trackedPosition = new TrackedPosition();
            trackedPosition.ID = id;
            trackedPosition.Latitude = latitude;
            trackedPosition.Longitude = longitude;
            trackedPosition.Altitude = altitude;
            return trackedPosition;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Building_ID
        {
            get
            {
                return _Building_ID;
            }
            set
            {
                OnBuilding_IDChanging(value);
                ReportPropertyChanging("Building_ID");
                _Building_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Building_ID");
                OnBuilding_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Building_ID;
        partial void OnBuilding_IDChanging(Nullable<global::System.Int32> value);
        partial void OnBuilding_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VertexID
        {
            get
            {
                return _VertexID;
            }
            set
            {
                OnVertexIDChanging(value);
                ReportPropertyChanging("VertexID");
                _VertexID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VertexID");
                OnVertexIDChanged();
            }
        }
        private Nullable<global::System.Int32> _VertexID;
        partial void OnVertexIDChanging(Nullable<global::System.Int32> value);
        partial void OnVertexIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.Double _Latitude;
        partial void OnLatitudeChanging(global::System.Double value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private global::System.Double _Longitude;
        partial void OnLongitudeChanging(global::System.Double value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Altitude
        {
            get
            {
                return _Altitude;
            }
            set
            {
                OnAltitudeChanging(value);
                ReportPropertyChanging("Altitude");
                _Altitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Altitude");
                OnAltitudeChanged();
            }
        }
        private global::System.Double _Altitude;
        partial void OnAltitudeChanging(global::System.Double value);
        partial void OnAltitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Provider
        {
            get
            {
                return _Provider;
            }
            set
            {
                OnProviderChanging(value);
                ReportPropertyChanging("Provider");
                _Provider = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Provider");
                OnProviderChanged();
            }
        }
        private global::System.String _Provider;
        partial void OnProviderChanging(global::System.String value);
        partial void OnProviderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _Time;
        partial void OnTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Accuracy
        {
            get
            {
                return _Accuracy;
            }
            set
            {
                OnAccuracyChanging(value);
                ReportPropertyChanging("Accuracy");
                _Accuracy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Accuracy");
                OnAccuracyChanged();
            }
        }
        private Nullable<global::System.Double> _Accuracy;
        partial void OnAccuracyChanging(Nullable<global::System.Double> value);
        partial void OnAccuracyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Speed
        {
            get
            {
                return _Speed;
            }
            set
            {
                OnSpeedChanging(value);
                ReportPropertyChanging("Speed");
                _Speed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Speed");
                OnSpeedChanged();
            }
        }
        private Nullable<global::System.Double> _Speed;
        partial void OnSpeedChanging(Nullable<global::System.Double> value);
        partial void OnSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Bearing
        {
            get
            {
                return _Bearing;
            }
            set
            {
                OnBearingChanging(value);
                ReportPropertyChanging("Bearing");
                _Bearing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bearing");
                OnBearingChanged();
            }
        }
        private Nullable<global::System.Double> _Bearing;
        partial void OnBearingChanging(Nullable<global::System.Double> value);
        partial void OnBearingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasAccuracy
        {
            get
            {
                return _HasAccuracy;
            }
            set
            {
                OnHasAccuracyChanging(value);
                ReportPropertyChanging("HasAccuracy");
                _HasAccuracy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasAccuracy");
                OnHasAccuracyChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasAccuracy;
        partial void OnHasAccuracyChanging(Nullable<global::System.Boolean> value);
        partial void OnHasAccuracyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasSpeed
        {
            get
            {
                return _HasSpeed;
            }
            set
            {
                OnHasSpeedChanging(value);
                ReportPropertyChanging("HasSpeed");
                _HasSpeed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasSpeed");
                OnHasSpeedChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasSpeed;
        partial void OnHasSpeedChanging(Nullable<global::System.Boolean> value);
        partial void OnHasSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasBearing
        {
            get
            {
                return _HasBearing;
            }
            set
            {
                OnHasBearingChanging(value);
                ReportPropertyChanging("HasBearing");
                _HasBearing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasBearing");
                OnHasBearingChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasBearing;
        partial void OnHasBearingChanging(Nullable<global::System.Boolean> value);
        partial void OnHasBearingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private global::System.String _ClientID;
        partial void OnClientIDChanging(global::System.String value);
        partial void OnClientIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="radiomapModel", Name="Vertex")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vertex : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vertex object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="building_ID">Initial value of the Building_ID property.</param>
        public static Vertex CreateVertex(global::System.Int32 id, global::System.Int32 building_ID)
        {
            Vertex vertex = new Vertex();
            vertex.ID = id;
            vertex.Building_ID = building_ID;
            return vertex;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Building_ID
        {
            get
            {
                return _Building_ID;
            }
            set
            {
                OnBuilding_IDChanging(value);
                ReportPropertyChanging("Building_ID");
                _Building_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Building_ID");
                OnBuilding_IDChanged();
            }
        }
        private global::System.Int32 _Building_ID;
        partial void OnBuilding_IDChanging(global::System.Int32 value);
        partial void OnBuilding_IDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_VertexAbsoluteLocation", "AbsoluteLocation")]
        public EntityCollection<AbsoluteLocation> AbsoluteLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AbsoluteLocation>("radiomapModel.FK_VertexAbsoluteLocation", "AbsoluteLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AbsoluteLocation>("radiomapModel.FK_VertexAbsoluteLocation", "AbsoluteLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_BuildingVertex", "Building")]
        public Building Building
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("radiomapModel.FK_BuildingVertex", "Building").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("radiomapModel.FK_BuildingVertex", "Building").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Building> BuildingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("radiomapModel.FK_BuildingVertex", "Building");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Building>("radiomapModel.FK_BuildingVertex", "Building", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_VertexPixelLocation", "PixelLocation")]
        public EntityCollection<PixelLocation> PixelLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PixelLocation>("radiomapModel.FK_VertexPixelLocation", "PixelLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PixelLocation>("radiomapModel.FK_VertexPixelLocation", "PixelLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_VertexRelativeLocation", "RelativeLocation")]
        public EntityCollection<RelativeLocation> RelativeLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RelativeLocation>("radiomapModel.FK_VertexRelativeLocation", "RelativeLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RelativeLocation>("radiomapModel.FK_VertexRelativeLocation", "RelativeLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_VertexSymbolicLocation", "SymbolicLocation")]
        public EntityCollection<SymbolicLocation> SymbolicLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SymbolicLocation>("radiomapModel.FK_VertexSymbolicLocation", "SymbolicLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SymbolicLocation>("radiomapModel.FK_VertexSymbolicLocation", "SymbolicLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_VertexWifiMeasurement", "WifiMeasurement")]
        public EntityCollection<WifiMeasurement> WifiMeasurements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WifiMeasurement>("radiomapModel.FK_VertexWifiMeasurement", "WifiMeasurement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WifiMeasurement>("radiomapModel.FK_VertexWifiMeasurement", "WifiMeasurement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_SnifferWifiMeasurements_Vertices", "SnifferWifiMeasurement")]
        public EntityCollection<SnifferWifiMeasurement> SnifferWifiMeasurements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SnifferWifiMeasurement>("radiomapModel.FK_SnifferWifiMeasurements_Vertices", "SnifferWifiMeasurement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SnifferWifiMeasurement>("radiomapModel.FK_SnifferWifiMeasurements_Vertices", "SnifferWifiMeasurement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "Vertex_Edges", "Edge")]
        public EntityCollection<Edge> Edges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Edge>("radiomapModel.Vertex_Edges", "Edge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Edge>("radiomapModel.Vertex_Edges", "Edge", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="radiomapModel", Name="WifiMeasurement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WifiMeasurement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WifiMeasurement object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="vertex_ID">Initial value of the Vertex_ID property.</param>
        public static WifiMeasurement CreateWifiMeasurement(global::System.Int32 id, global::System.Int32 vertex_ID)
        {
            WifiMeasurement wifiMeasurement = new WifiMeasurement();
            wifiMeasurement.ID = id;
            wifiMeasurement.Vertex_ID = vertex_ID;
            return wifiMeasurement;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> meas_time_start
        {
            get
            {
                return _meas_time_start;
            }
            set
            {
                Onmeas_time_startChanging(value);
                ReportPropertyChanging("meas_time_start");
                _meas_time_start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("meas_time_start");
                Onmeas_time_startChanged();
            }
        }
        private Nullable<global::System.DateTime> _meas_time_start;
        partial void Onmeas_time_startChanging(Nullable<global::System.DateTime> value);
        partial void Onmeas_time_startChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> meas_time_end
        {
            get
            {
                return _meas_time_end;
            }
            set
            {
                Onmeas_time_endChanging(value);
                ReportPropertyChanging("meas_time_end");
                _meas_time_end = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("meas_time_end");
                Onmeas_time_endChanged();
            }
        }
        private Nullable<global::System.DateTime> _meas_time_end;
        partial void Onmeas_time_endChanging(Nullable<global::System.DateTime> value);
        partial void Onmeas_time_endChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Vertex_ID
        {
            get
            {
                return _Vertex_ID;
            }
            set
            {
                OnVertex_IDChanging(value);
                ReportPropertyChanging("Vertex_ID");
                _Vertex_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Vertex_ID");
                OnVertex_IDChanged();
            }
        }
        private global::System.Int32 _Vertex_ID;
        partial void OnVertex_IDChanging(global::System.Int32 value);
        partial void OnVertex_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Is_Collective
        {
            get
            {
                return _Is_Collective;
            }
            set
            {
                OnIs_CollectiveChanging(value);
                ReportPropertyChanging("Is_Collective");
                _Is_Collective = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Is_Collective");
                OnIs_CollectiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Is_Collective;
        partial void OnIs_CollectiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIs_CollectiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Was_Collective
        {
            get
            {
                return _Was_Collective;
            }
            set
            {
                OnWas_CollectiveChanging(value);
                ReportPropertyChanging("Was_Collective");
                _Was_Collective = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Was_Collective");
                OnWas_CollectiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Was_Collective;
        partial void OnWas_CollectiveChanging(Nullable<global::System.Boolean> value);
        partial void OnWas_CollectiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_WifiMeasurementHistogram", "Histogram")]
        public EntityCollection<Histogram> Histograms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Histogram>("radiomapModel.FK_WifiMeasurementHistogram", "Histogram");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Histogram>("radiomapModel.FK_WifiMeasurementHistogram", "Histogram", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("radiomapModel", "FK_VertexWifiMeasurement", "Vertex")]
        public Vertex Vertex
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vertex>("radiomapModel.FK_VertexWifiMeasurement", "Vertex").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vertex>("radiomapModel.FK_VertexWifiMeasurement", "Vertex").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vertex> VertexReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vertex>("radiomapModel.FK_VertexWifiMeasurement", "Vertex");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vertex>("radiomapModel.FK_VertexWifiMeasurement", "Vertex", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
